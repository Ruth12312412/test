# 生产环境配置

server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: ai-admin-backend
  
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:ai_admin_system}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:ai_admin}
    password: ${DB_PASSWORD:ai_admin123}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
    
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0
    timeout: 10000ms
    lettuce:
      pool:
        max-active: 20
        max-wait: -1ms
        max-idle: 10
        min-idle: 5
        
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
  global-config:
    db-config:
      id-type: AUTO
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/*.xml

# JWT配置
jwt:
  secret: ${JWT_SECRET:ai-admin-system-jwt-secret-key-2024-production}
  expiration: 86400000 # 24小时

# AI API配置
ai:
  openai:
    api-key: ${OPENAI_API_KEY:}
    base-url: ${OPENAI_BASE_URL:https://api.openai.com/v1}
  midjourney:
    api-key: ${MIDJOURNEY_API_KEY:}
    base-url: ${MIDJOURNEY_BASE_URL:https://api.midjourney.com/v1}

# 文件上传配置
file:
  upload-path: ${FILE_UPLOAD_PATH:/app/uploads}
  max-size: ${FILE_MAX_SIZE:52428800} # 50MB

# 日志配置
logging:
  level:
    com.ai.admin: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: /app/logs/ai-admin-system.log
    max-size: 100MB
    max-history: 30

# Knife4j配置（生产环境禁用）
knife4j:
  enable: false

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized